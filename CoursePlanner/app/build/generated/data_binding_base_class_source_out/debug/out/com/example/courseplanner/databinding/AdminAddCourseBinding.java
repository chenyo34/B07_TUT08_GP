// Generated by view binder compiler. Do not edit!
package com.example.courseplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.courseplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminAddCourseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button adminAddCourseButton;

  @NonNull
  public final EditText adminAddCourseCode;

  @NonNull
  public final EditText adminAddCourseName;

  @NonNull
  public final Button adminAddCourseReturn;

  @NonNull
  public final TextView adminAddCourseTextView;

  @NonNull
  public final EditText adminAddOffering;

  @NonNull
  public final EditText adminAddPre;

  private AdminAddCourseBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button adminAddCourseButton, @NonNull EditText adminAddCourseCode,
      @NonNull EditText adminAddCourseName, @NonNull Button adminAddCourseReturn,
      @NonNull TextView adminAddCourseTextView, @NonNull EditText adminAddOffering,
      @NonNull EditText adminAddPre) {
    this.rootView = rootView;
    this.adminAddCourseButton = adminAddCourseButton;
    this.adminAddCourseCode = adminAddCourseCode;
    this.adminAddCourseName = adminAddCourseName;
    this.adminAddCourseReturn = adminAddCourseReturn;
    this.adminAddCourseTextView = adminAddCourseTextView;
    this.adminAddOffering = adminAddOffering;
    this.adminAddPre = adminAddPre;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminAddCourseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminAddCourseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_add_course, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminAddCourseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adminAddCourseButton;
      Button adminAddCourseButton = ViewBindings.findChildViewById(rootView, id);
      if (adminAddCourseButton == null) {
        break missingId;
      }

      id = R.id.adminAddCourseCode;
      EditText adminAddCourseCode = ViewBindings.findChildViewById(rootView, id);
      if (adminAddCourseCode == null) {
        break missingId;
      }

      id = R.id.adminAddCourseName;
      EditText adminAddCourseName = ViewBindings.findChildViewById(rootView, id);
      if (adminAddCourseName == null) {
        break missingId;
      }

      id = R.id.adminAddCourseReturn;
      Button adminAddCourseReturn = ViewBindings.findChildViewById(rootView, id);
      if (adminAddCourseReturn == null) {
        break missingId;
      }

      id = R.id.adminAddCourseTextView;
      TextView adminAddCourseTextView = ViewBindings.findChildViewById(rootView, id);
      if (adminAddCourseTextView == null) {
        break missingId;
      }

      id = R.id.adminAddOffering;
      EditText adminAddOffering = ViewBindings.findChildViewById(rootView, id);
      if (adminAddOffering == null) {
        break missingId;
      }

      id = R.id.adminAddPre;
      EditText adminAddPre = ViewBindings.findChildViewById(rootView, id);
      if (adminAddPre == null) {
        break missingId;
      }

      return new AdminAddCourseBinding((ConstraintLayout) rootView, adminAddCourseButton,
          adminAddCourseCode, adminAddCourseName, adminAddCourseReturn, adminAddCourseTextView,
          adminAddOffering, adminAddPre);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
